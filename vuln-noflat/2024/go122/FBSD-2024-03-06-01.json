{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go121"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.21.8"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2024-03-05T00:00:00Z",
        "vid": "b1b039ec-dbfc-11ee-9165-901b0e9408dc"
    },
    "details": "The Go project reports reports:\n\n> crypto/x509: Verify panics on certificates with an\n> unknown public key algorithm\n>\n> Verifying a certificate chain which contains a\n> certificate with an unknown public key algorithm will\n> cause Certificate.Verify to panic.\n\n> net/http: memory exhaustion in Request.ParseMultipartForm\n>\n> When parsing a multipart form (either explicitly with\n> Request.ParseMultipartForm or implicitly with Request.FormValue,\n> Request.PostFormValue, or Request.FormFile), limits on the total\n> size of the parsed form were not applied to the memory consumed\n> while reading a single form line. This permitted a maliciously\n> crafted input containing very long lines to cause allocation of\n> arbitrarily large amounts of memory, potentially leading to memory\n> exhaustion.\n\n> net/http, net/http/cookiejar: incorrect forwarding\n> of sensitive headers and cookies on HTTP redirect\n>\n> When following an HTTP redirect to a domain which\n> is not a subdomain match or exact match of the initial\n> domain, an http.Client does not forward sensitive headers\n> such as \"Authorization\" or \"Cookie\". For example, a\n> redirect from foo.com to www.foo.com will forward the\n> Authorization header, but a redirect to bar.com will not.\n\n> html/template: errors returned from MarshalJSON methods\n> may break template escaping\n>\n> If errors returned from MarshalJSON methods contain user\n> controlled data, they may be used to break the contextual\n> auto-escaping behavior of the html/template package, allowing\n> for subsequent actions to inject unexpected content into\n> templates.\n\n> net/mail: comments in display names are incorrectly handled\n>\n> The ParseAddressList function incorrectly handles comments\n> (text within parentheses) within display names. Since this is a\n> misalignment with conforming address parsers, it can result in\n> different trust decisions being made by programs using different\n> parsers.",
    "id": "FBSD-2024-03-06-01",
    "modified": "2024-03-06T00:00:00Z",
    "published": "2024-03-06T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-45289"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-45290"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2024-24783"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2024-24784"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2024-24785"
        },
        {
            "type": "WEB",
            "url": "https://groups.google.com/g/golang-announce/c/5pwGVUPoMbg/m/46oA5yPABQAJ"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "go -- multiple vulnerabilities"
}
