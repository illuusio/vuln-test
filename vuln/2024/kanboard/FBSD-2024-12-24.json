{
    "schema_version": "1.7.0",
    "modified": "2024-12-24T00:00:00Z",
    "published": "2024-12-24T00:00:00Z",
    "id": "FBSD-2024-12-24",
    "summary": "kanboard -- Insufficient session invalidation",
    "details": "<description xmlns=\"http://www.vuxml.org/apps/vuxml-1\">\n\t<body xmlns=\"http://www.w3.org/1999/xhtml\">\n\t<p>security-advisories@github.com reports:</p>\n\t<blockquote cite=\"https://github.com/kanboard/kanboard/blob/main/app/Core/Session/SessionHandler.php#L40\">\n\t  <p>Kanboard is project management software that focuses on the Kanban\n\tmethodology.  In affected versions sessions are still usable even\n\tthough their lifetime has exceeded.  Kanboard implements a cutom\n\tsession handler (`app/Core/Session/SessionHandler.php`), to store\n\tthe session data in a database.  Therefore, when a `session_id` is\n\tgiven, kanboard queries the data from the `sessions` sql table.  At\n\tthis point, it does not correctly verify, if a given `session_id`\n\thas already exceeded its lifetime (`expires_at`).  Thus, a session\n\twhich's lifetime is already `&gt; time()`, is still queried\n\tfrom the database and hence a valid login.  The implemented\n\t**SessionHandlerInterface::gc** function, that does remove invalid\n\tsessions, is called only **with a certain probability** (_Cleans\n\tup expired sessions.  Called by `session_start()`, based on\n\t`session.gc_divisor`, `session.gc_probability` and `session.gc_maxlifetime`\n\tsettings_) accordingly to the php documentation.  In the official\n\tKanboard docker image these values default to: session.gc_probability=1,\n\tsession.gc_divisor=1000. Thus, an expired session is only terminated\n\twith probability 1/1000. There are no known workarounds for\n\tthis vulnerability.</p>\n\t</blockquote>\n\t</body>\n    </description>",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2024-55603"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-55603"
        }
    ],
    "affected": [],
    "database_specific": {
        "vid": "94b2d58a-c1e9-11ef-aa3f-dcfe074bd614",
        "discovery": "2024-12-19T00:00:00Z"
    }
}
