{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go118"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.18.7"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go119"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.19.2"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2022-10-04T00:00:00Z",
        "vid": "854c2afb-4424-11ed-af97-adcabf310f9b"
    },
    "details": "The Go project reports:\n\n> archive/tar: unbounded memory consumption when reading\n> headers\n>\n> Reader.Read did not set a limit on the maximum size of\n> file headers. A maliciously crafted archive could cause\n> Read to allocate unbounded amounts of memory, potentially\n> causing resource exhaustion or panics. Reader.Read now\n> limits the maximum size of header blocks to 1 MiB.\n\n> net/http/httputil: ReverseProxy should not forward\n> unparseable query parameters\n>\n> Requests forwarded by ReverseProxy included the raw\n> query parameters from the inbound request, including\n> unparseable parameters rejected by net/http. This could\n> permit query parameter smuggling when a Go proxy\n> forwards a parameter with an unparseable value.\n>\n> ReverseProxy will now sanitize the query parameters in\n> the forwarded query when the outbound request's Form\n> field is set after the ReverseProxy.Director function\n> returns, indicating that the proxy has parsed the query\n> parameters. Proxies which do not parse query parameters\n> continue to forward the original query parameters\n> unchanged.\n\n> regexp/syntax: limit memory used by parsing regexps\n>\n> The parsed regexp representation is linear in the size\n> of the input, but in some cases the constant factor can be\n> as high as 40,000, making relatively small regexps consume\n> much larger amounts of memory.\n>\n> Each regexp being parsed is now limited to a 256 MB\n> memory footprint. Regular expressions whose\n> representation would use more space than that are now\n> rejected. Normal use of regular expressions is\n> unaffected.",
    "id": "FreeBSD-kernel-2022-0062",
    "modified": "2022-10-04T00:00:00Z",
    "published": "2022-10-04T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-2879"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-2880"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-41715"
        },
        {
            "type": "WEB",
            "url": "https://groups.google.com/g/golang-announce/c/xtuG5faxtaU/m/jEhlI_5WBgAJ"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "go -- multiple vulnerabilities"
}
