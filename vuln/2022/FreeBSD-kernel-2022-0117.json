{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go118"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.18.4"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go117"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.17.12"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2022-07-12T00:00:00Z",
        "vid": "a4f2416c-02a0-11ed-b817-10c37b4ac2ea"
    },
    "details": "The Go project reports:\n\n> net/http: improper sanitization of Transfer-Encoding\n> header\n>\n> The HTTP/1 client accepted some invalid\n> Transfer-Encoding headers as indicating a \"chunked\"\n> encoding. This could potentially allow for request\n> smuggling, but only if combined with an intermediate\n> server that also improperly failed to reject the header\n> as invalid.\n\n> When httputil.ReverseProxy.ServeHTTP was called with a\n> Request.Header map containing a nil value for the\n> X-Forwarded-For header, ReverseProxy would set the client\n> IP as the value of the X-Forwarded-For header, contrary to\n> its documentation. In the more usual case where a Director\n> function set the X-Forwarded-For header value to nil,\n> ReverseProxy would leave the header unmodified as\n> expected.\n\n> compress/gzip: stack exhaustion in Reader.Read\n>\n> Calling Reader.Read on an archive containing a large\n> number of concatenated 0-length compressed files can\n> cause a panic due to stack exhaustion.\n\n> encoding/xml: stack exhaustion in Unmarshal\n>\n> Calling Unmarshal on a XML document into a Go struct\n> which has a nested field that uses the any field tag can\n> cause a panic due to stack exhaustion.\n\n> encoding/xml: stack exhaustion in Decoder.Skip\n>\n> Calling Decoder.Skip when parsing a deeply nested XML\n> document can cause a panic due to stack exhaustion.\n\n> encoding/gob: stack exhaustion in Decoder.Decode\n>\n> Calling Decoder.Decode on a message which contains\n> deeply nested structures can cause a panic due to stack\n> exhaustion.\n\n> path/filepath: stack exhaustion in Glob\n>\n> Calling Glob on a path which contains a large number of\n> path separators can cause a panic due to stack\n> exhaustion.\n\n> io/fs: stack exhaustion in Glob\n>\n> Calling Glob on a path which contains a large number of\n> path separators can cause a panic due to stack\n> exhaustion.\n\n> go/parser: stack exhaustion in all Parse\\* functions\n>\n> Calling any of the Parse functions on Go source code\n> which contains deeply nested types or declarations can\n> cause a panic due to stack exhaustion.",
    "id": "FreeBSD-kernel-2022-0117",
    "modified": "2022-07-13T00:00:00Z",
    "published": "2022-07-13T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-1705"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-32148"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-30631"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-30633"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-28131"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-30635"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-30632"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-30630"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-1962"
        },
        {
            "type": "WEB",
            "url": "https://groups.google.com/g/golang-dev/c/frczlF8OFQ0"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "go -- multiple vulnerabilities"
}
