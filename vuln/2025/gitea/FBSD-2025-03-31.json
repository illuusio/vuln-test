{
    "schema_version": "1.7.0",
    "modified": "2025-03-31T00:00:00Z",
    "published": "2025-03-31T00:00:00Z",
    "id": "FBSD-2025-03-31",
    "summary": "gitea -- Multiple vulnerabilities",
    "details": "<description xmlns=\"http://www.vuxml.org/apps/vuxml-1\">\n\t<body xmlns=\"http://www.w3.org/1999/xhtml\">\n\t<p>security@golang.org reports:</p>\n\t<blockquote cite=\"https://go.dev/cl/654697\">\n\t<p>Matching of hosts against proxy patterns can improperly treat an\n\tIPv6 zone ID as a hostname component.  For example, when the NO_PROXY\n\tenvironment variable is set to \"*.example.com\", a request\n\tto \"[::1%25.example.com]:80` will incorrectly match and not\n\tbe proxied.</p>\n\t<p>go-redis is the official Redis client library for the Go programming\n\tlanguage.  Prior to 9.5.5, 9.6.3, and 9.7.3, go-redis potentially\n\tresponds out of order when `CLIENT SETINFO` times out during\n\tconnection establishment.  This can happen when the client is\n\tconfigured to transmit its identity, there are network connectivity\n\tissues, or the client was configured with aggressive timeouts.  The\n\tproblem occurs for multiple use cases.  For sticky connections, you\n\treceive persistent out-of-order responses for the lifetime of the\n\tconnection.  All commands in the pipeline receive incorrect responses.\n\tWhen used with the default ConnPool once a connection is returned\n\tafter use with ConnPool#Put the read buffer will be checked and the\n\tconnection will be marked as bad due to the unread data.  This means\n\tthat at most one out-of-order response before the connection is\n\tdiscarded.  This issue is fixed in 9.5.5, 9.6.3, and 9.7.3.  You\n\tcan prevent the vulnerability by setting the flag DisableIndentity\n\tto true when constructing the client instance.</p>\n\t<p>golang-jwt is a Go implementation of JSON Web Tokens.  Prior to\n\t5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a\n\tcall to strings.Split) its argument (which is untrusted data) on\n\tperiods.  As a result, in the face of a malicious request whose\n\tAuthorization header consists of Bearer followed by many period\n\tcharacters, a call to that function incurs allocations to the tune\n\tof O(n) bytes (where n stands for the length of the function's\n\targument), with a constant factor of about 16.  This issue is fixed\n\tin 5.2.2 and 4.5.2.</p>\n\t</blockquote>\n\t</body>\n    </description>",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-22870"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-22870"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-29923"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-29923"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-30204"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-30204"
        }
    ],
    "affected": [],
    "database_specific": {
        "vid": "300f86de-0e4d-11f0-ae40-b42e991fc52e",
        "discovery": "2025-03-12T00:00:00Z"
    }
}
