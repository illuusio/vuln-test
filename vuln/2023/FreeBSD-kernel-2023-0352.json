{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "openssl"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.1.1t,1"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "openssl-devel"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "3.0.8"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "openssl-quictls"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "3.0.8"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2023-02-07T00:00:00Z",
        "vid": "648a432c-a71f-11ed-86e9-d4c9ef517024"
    },
    "details": "The OpenSSL project reports:\n\n> X.400 address type confusion in X.509 GeneralName (CVE-2023-0286) (High):\n> There is a type confusion vulnerability relating to X.400 address processing\n> inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1\\_STRING but\n> the public structure definition for GENERAL\\_NAME incorrectly specified the type\n> of the x400Address field as ASN1\\_TYPE. This field is subsequently interpreted by\n> the OpenSSL function GENERAL\\_NAME\\_cmp as an ASN1\\_TYPE rather than an\n> ASN1\\_STRING.\n>\n> Timing Oracle in RSA Decryption (CVE-2022-4304) (Moderate):\n> A timing based side channel exists in the OpenSSL RSA Decryption implementation\n> which could be sufficient to recover a plaintext across a network in a\n> Bleichenbacher style attack. To achieve a successful decryption an attacker\n> would have to be able to send a very large number of trial messages for\n> decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\n> RSA-OEAP and RSASVE.\n>\n> X.509 Name Constraints Read Buffer Overflow (CVE-2022-4203) (Moderate):\n> A read buffer overrun can be triggered in X.509 certificate verification,\n> specifically in name constraint checking. Note that this occurs\n> after certificate chain signature verification and requires either a\n> CA to have signed the malicious certificate or for the application to\n> continue certificate verification despite failure to construct a path\n> to a trusted issuer.\n>\n> Use-after-free following BIO\\_new\\_NDEF (CVE-2023-0215) (Moderate):\n> The public API function BIO\\_new\\_NDEF is a helper function used for streaming\n> ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\n> SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\n> end user applications.\n>\n> Double free after calling PEM\\_read\\_bio\\_ex (CVE-2022-4450) (Moderate):\n> The function PEM\\_read\\_bio\\_ex() reads a PEM file from a BIO and parses and\n> decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\n> If the function succeeds then the \"name\\_out\", \"header\" and \"data\" arguments are\n> populated with pointers to buffers containing the relevant decoded data. The\n> caller is responsible for freeing those buffers. It is possible to construct a\n> PEM file that results in 0 bytes of payload data. In this case PEM\\_read\\_bio\\_ex()\n> will return a failure code but will populate the header argument with a pointer\n> to a buffer that has already been freed. If the caller also frees this buffer\n> then a double free will occur. This will most likely lead to a crash. This\n> could be exploited by an attacker who has the ability to supply malicious PEM\n> files for parsing to achieve a denial of service attack.\n>\n> Invalid pointer dereference in d2i\\_PKCS7 functions (CVE-2023-0216) (Moderate):\n> An invalid pointer dereference on read can be triggered when an\n> application tries to load malformed PKCS7 data with the\n> d2i\\_PKCS7(), d2i\\_PKCS7\\_bio() or d2i\\_PKCS7\\_fp() functions.\n>\n> NULL dereference validating DSA public key (CVE-2023-0217) (Moderate):\n> An invalid pointer dereference on read can be triggered when an\n> application tries to check a malformed DSA public key by the\n> EVP\\_PKEY\\_public\\_check() function. This will most likely lead\n> to an application crash. This function can be called on public\n> keys supplied from untrusted sources which could allow an attacker\n> to cause a denial of service attack.\n>\n> NULL dereference during PKCS7 data verification (CVE-2023-0401) (Moderate):\n> A NULL pointer can be dereferenced when signatures are being\n> verified on PKCS7 signed or signedAndEnveloped data. In case the hash\n> algorithm used for the signature is known to the OpenSSL library but\n> the implementation of the hash algorithm is not available the digest\n> initialization will fail. There is a missing check for the return\n> value from the initialization function which later leads to invalid\n> usage of the digest API most likely leading to a crash.",
    "id": "FreeBSD-kernel-2023-0352",
    "modified": "2023-02-07T00:00:00Z",
    "published": "2023-02-07T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-0286"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-4304"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-4203"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-0215"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2022-4450"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-0216"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-0401"
        },
        {
            "type": "WEB",
            "url": "https://www.openssl.org/news/secadv/20230207.txt"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "OpenSSL -- Multiple vulnerabilities"
}
