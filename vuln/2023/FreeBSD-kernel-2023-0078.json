{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "libX11"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.8.7"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2023-09-22T00:00:00Z",
        "vid": "bd92f1ab-690c-11ee-9ed0-001fc69cd6dc"
    },
    "details": "The X.Org project reports:\n\n> CVE-2023-43785: out-of-bounds memory access in \\_XkbReadKeySyms()\n> :   When libX11 is processing the reply from the X server to the XkbGetMap\n>     request, if it detected the number of symbols in the new map was less\n>     than the size of the buffer it had allocated, it always added room for\n>     128 more symbols, instead of the actual size needed. While the\n>     \\_XkbReadBufferCopyKeySyms() helper function returned an error if asked\n>     to copy more keysyms into the buffer than there was space allocated for,\n>     the caller never checked for an error and assumed the full set of keysyms\n>     was copied into the buffer and could then try to read out of bounds when\n>     accessing the buffer. libX11 1.8.7 has been patched to both fix the size\n>     allocated and check for error returns from \\_XkbReadBufferCopyKeySyms().\n>\n> CVE-2023-43786: stack exhaustion in XPutImage\n> :   When splitting a single line of pixels into chunks that fit in a single\n>     request (not using the BIG-REQUESTS extension) to send to the X server,\n>     the code did not take into account the number of bits per pixel, so would\n>     just loop forever finding it needed to send more pixels than fit in the\n>     given request size and not breaking them down into a small enough chunk to\n>     fit. An XPM file was provided that triggered this bug when loaded via\n>     libXpm's XpmReadFileToPixmap() function, which in turn calls XPutImage()\n>     and hit this bug.\n>\n> CVE-2023-43787: integer overflow in XCreateImage() leading to a heap overflow\n> :   When creating an image, there was no validation that the multiplication\n>     of the caller-provided width by the visual's bits\\_per\\_pixel did not\n>     overflow and thus result in the allocation of a buffer too small to hold\n>     the data that would be copied into it. An XPM file was provided that\n>     triggered this bug when loaded via libXpm's XpmReadFileToPixmap() function,\n>     which in turn calls XCreateImage() and hit this bug.i",
    "id": "FreeBSD-kernel-2023-0078",
    "modified": "2023-10-12T00:00:00Z",
    "published": "2023-10-12T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-43785"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-43786"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2023-43787"
        },
        {
            "type": "WEB",
            "url": "https://lists.x.org/archives/xorg/2023-October/061506.html"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "11/libX11 multiple vulnerabilities"
}
