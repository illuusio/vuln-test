{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "go"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.16.6,1"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2021-07-07T00:00:00Z",
        "vid": "c365536d-e3cf-11eb-9d8d-b37b683944c2"
    },
    "details": "The Go project reports:\n\n> crypto/tls clients can panic when provided a certificate of\n> the wrong type for the negotiated parameters. net/http clients\n> performing HTTPS requests are also affected. The panic can be\n> triggered by an attacker in a privileged network position\n> without access to the server certificate's private key, as\n> long as a trusted ECDSA or Ed25519 certificate for the server\n> exists (or can be issued), or the client is configured with\n> Config.InsecureSkipVerify. Clients that disable all TLS\\_RSA\n> cipher suites (that is, TLS 1.0\u20131.2 cipher suites without\n> ECDHE), as well as TLS 1.3-only clients, are unaffected.",
    "id": "FreeBSD-kernel-2021-0140",
    "modified": "2021-07-12T00:00:00Z",
    "published": "2021-07-12T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2021-34558"
        },
        {
            "type": "WEB",
            "url": "https://github.com/golang/go/issues/47143"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "go -- crypto/tls: clients can panic when provided a certificate of the wrong type for the negotiated parameters"
}
