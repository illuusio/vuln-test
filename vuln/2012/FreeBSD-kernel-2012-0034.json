{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "ruby"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "introduced": "1.8.7,1,1"
                        },
                        {
                            "fixed": "1.8.7.371,1"
                        }
                    ],
                    "type": "ECOSYSTEM"
                },
                {
                    "events": [
                        {
                            "introduced": "1.9.3,1,1"
                        },
                        {
                            "fixed": "1.9.3.286,1"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2012-08-21T00:00:00Z",
        "vid": "2a093853-2495-11e2-b0c7-000d601460a4"
    },
    "details": "The official ruby site reports:\n\n> Vulnerabilities found for Exception#to\\_s, NameError#to\\_s, and\n> name\\_err\\_mesg\\_to\\_s() which is Ruby interpreter-internal API. A\n> malicious user code can bypass $SAFE check by utilizing one of\n> those security holes.\n>\n> Ruby's $SAFE mechanism enables untrusted user codes to run in\n> $SAFE >= 4 mode. This is a kind of sandboxing so some operations\n> are restricted in that mode to protect other data outside the\n> sandbox.\n>\n> The problem found was around this mechanism. Exception#to\\_s,\n> NameError#to\\_s, and name\\_err\\_mesg\\_to\\_s() interpreter-internal API\n> was not correctly handling the $SAFE bits so a String object which\n> is not tainted can destructively be marked as tainted using them.\n> By using this an untrusted code in a sandbox can modify a\n> formerly-untainted string destructively.\n>\n> Ruby 1.8 once had a similar security issue. It fixed\n> Exception#to\\_s and NameError#to\\_s, but name\\_err\\_mesg\\_to\\_str() issue\n> survived previous security fix",
    "id": "FreeBSD-kernel-2012-0034",
    "modified": "2012-11-01T00:00:00Z",
    "published": "2012-11-01T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2012-4464"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2012-4466"
        },
        {
            "type": "WEB",
            "url": "http://www.ruby-lang.org/en/news/2012/10/12/cve-2012-4464-cve-2012-4466/"
        },
        {
            "type": "WEB",
            "url": "https://access.redhat.com/security/cve/CVE-2012-4464/"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "ruby -- $SAFE escaping vulnerability about Exception#to_s/NameError#to_s"
}
