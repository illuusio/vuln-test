{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "mbedtls"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "2.16.5"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2020-02-18T00:00:00Z",
        "vid": "056ea107-5729-11ea-a2f3-001cc0382b2f"
    },
    "details": "Janos Follath reports:\n\n> If Mbed TLS is running in an SGX enclave and the adversary has\n> control of the main operating system, they can launch a side\n> channel attack to recover the RSA private key when it is being\n> imported.\n>\n> The attack only requires access to fine grained measurements to\n> cache usage. Therefore the attack might be applicable to a scenario\n> where Mbed TLS is running in TrustZone secure world and the\n> attacker controls the normal world or possibly when Mbed TLS is\n> part of a hypervisor and the adversary has full control of a guest\n> OS.",
    "id": "FreeBSD-kernel-2020-0301",
    "modified": "2020-02-24T00:00:00Z",
    "published": "2020-02-24T00:00:00Z",
    "references": [
        {
            "type": "WEB",
            "url": "https://tls.mbed.org/tech-updates/security-advisories/mbedtls-security-advisory-2020-02"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "Mbed TLS -- Cache attack against RSA key import in SGX"
}
