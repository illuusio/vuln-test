{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "libvirt"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "introduced": "1.1.0"
                        },
                        {
                            "fixed": "1.2.19_2"
                        }
                    ],
                    "type": "ECOSYSTEM"
                },
                {
                    "events": [
                        {
                            "introduced": "1.2.20"
                        },
                        {
                            "fixed": "1.3.0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2015-10-30T00:00:00Z",
        "vid": "f714b4c9-a6c1-11e5-88d7-047d7b492d07"
    },
    "details": "Libvit development team reports:\n\n> Various virStorageVol\\* API operate on user-supplied volume names by\n> concatenating the volume name to the pool location. Note that the\n> virStoragePoolListVolumes API, when used on a storage pool backed by\n> a directory in a file system, will only list volumes immediately in\n> that directory (there is no traversal into subdirectories). However,\n> other APIs such as virStorageVolCreateXML were not checking if a\n> potential volume name represented one of the volumes that could be\n> returned by virStoragePoolListVolumes; because they were not rejecting\n> the use of '/' in a volume name.\n>\n> Because no checking was done on volume names, a user could supply\n> a potential volume name of something like '../../../etc/passwd' to\n> attempt to access a file not belonging to the storage pool. When\n> fine-grained Access Control Lists (ACL) are in effect, a user with\n> storage\\_vol:create ACL permission but lacking domain:write permission\n> could thus abuse virStorageVolCreateXML and similar APIs to gain\n> access to files not normally permitted to that user. Fortunately, it\n> appears that the only APIs that could leak information or corrupt\n> files require read-write connection to libvirtd; and when ACLs are not\n> in use (the default without any further configuration), a user with\n> read-write access can already be considered to have full access to the\n> machine, and without an escalation of privilege there is no security\n> problem.",
    "id": "FreeBSD-kernel-2015-0015",
    "modified": "2015-12-20T00:00:00Z",
    "published": "2015-12-20T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2015-5313"
        },
        {
            "type": "WEB",
            "url": "http://security.libvirt.org/2015/0004.html"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "libvirt -- ACL bypass using ../ to access beyond storage pool"
}
