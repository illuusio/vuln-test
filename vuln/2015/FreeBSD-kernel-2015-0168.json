{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "tarsnap"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "1.0.36"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2015-08-21T00:00:00Z",
        "vid": "2fe40238-480f-11e5-adde-14dae9d210b8"
    },
    "details": "Colin Percival reports:\n\n> 1. SECURITY FIX: When constructing paths of objects being archived, a buffer\n> could overflow by one byte upon encountering 1024, 2048, 4096, etc. byte\n> paths. Theoretically this could be exploited by an unprivileged user whose\n> files are being archived; I do not believe it is exploitable in practice,\n> but I am offering a $1000 bounty for the first person who can prove me wrong:\n> http://www.daemonology.net/blog/2015-08-21-tarsnap-1000-exploit-bounty.html\n>\n> 2. SECURITY FIX: An attacker with a machine's write keys, or with read keys\n> and control of the tarsnap service, could make tarsnap allocate a large\n> amount of memory upon listing archives or reading an archive the attacker\n> created; on 32-bit machines, tarsnap can be caused to crash under the\n> aforementioned conditions.",
    "id": "FreeBSD-kernel-2015-0168",
    "modified": "2015-08-21T00:00:00Z",
    "published": "2015-08-21T00:00:00Z",
    "references": [
        {
            "type": "WEB",
            "url": "http://mail.tarsnap.com/tarsnap-announce/msg00032.html"
        },
        {
            "type": "WEB",
            "url": "http://www.daemonology.net/blog/2015-08-21-tarsnap-1000-exploit-bounty.html"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "tarsnap -- buffer overflow and local DoS"
}
