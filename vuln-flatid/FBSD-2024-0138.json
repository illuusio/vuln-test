{
    "affected": [
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "py39-Jinja2"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "3.1.4"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "py310-Jinja2"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "3.1.4"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        },
        {
            "package": {
                "ecosystem": "FreeBSD:ports",
                "name": "py311-Jinja2"
            },
            "ranges": [
                {
                    "events": [
                        {
                            "fixed": "3.1.4"
                        },
                        {
                            "introduced": "0"
                        }
                    ],
                    "type": "ECOSYSTEM"
                }
            ]
        }
    ],
    "database_specific": {
        "discovery": "2024-05-06T00:00:00Z",
        "vid": "04c9c3f8-5ed3-11ef-8262-b0416f0c4c67"
    },
    "details": "security-advisories@github.com reports:\n\n> Jinja is an extensible templating engine. The `xmlattr` filter in\n> affected versions of Jinja accepts keys containing non-attribute\n> characters. XML/HTML attributes cannot contain spaces, `/`, `>`,\n> or `=`, as each would then be interpreted as starting a separate\n> attribute. If an application accepts keys (as opposed to only\n> values) as user input, and renders these in pages that other users\n> see as well, an attacker could use this to inject other attributes\n> and perform XSS. The fix for CVE-2024-22195 only addressed spaces\n> but not other characters. Accepting keys as user input is now\n> explicitly considered an unintended use case of the `xmlattr` filter,\n> and code that does so without otherwise validating the input should\n> be flagged as insecure, regardless of Jinja version. Accepting\n> \\_values\\_ as user input continues to be safe. This vulnerability\n> is fixed in 3.1.4.",
    "id": "FBSD-2024-0138",
    "modified": "2024-08-20T00:00:00Z",
    "published": "2024-08-20T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2024-34064"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-34064"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "Jinja2 -- Vulnerable to HTML attribute injection when passing user input as keys to xmlattr filter"
}
