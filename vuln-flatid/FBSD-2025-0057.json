{
    "affected": [],
    "database_specific": {
        "discovery": "2025-03-12T00:00:00Z",
        "vid": "300f86de-0e4d-11f0-ae40-b42e991fc52e"
    },
    "details": "security@golang.org reports:\n\n> Matching of hosts against proxy patterns can improperly treat an\n> IPv6 zone ID as a hostname component. For example, when the NO\\_PROXY\n> environment variable is set to \"\\*.example.com\", a request\n> to \"[::1%25.example.com]:80` will incorrectly match and not\n> be proxied.\n>\n> go-redis is the official Redis client library for the Go programming\n> language. Prior to 9.5.5, 9.6.3, and 9.7.3, go-redis potentially\n> responds out of order when `CLIENT SETINFO` times out during\n> connection establishment. This can happen when the client is\n> configured to transmit its identity, there are network connectivity\n> issues, or the client was configured with aggressive timeouts. The\n> problem occurs for multiple use cases. For sticky connections, you\n> receive persistent out-of-order responses for the lifetime of the\n> connection. All commands in the pipeline receive incorrect responses.\n> When used with the default ConnPool once a connection is returned\n> after use with ConnPool#Put the read buffer will be checked and the\n> connection will be marked as bad due to the unread data. This means\n> that at most one out-of-order response before the connection is\n> discarded. This issue is fixed in 9.5.5, 9.6.3, and 9.7.3. You\n> can prevent the vulnerability by setting the flag DisableIndentity\n> to true when constructing the client instance.\n>\n> golang-jwt is a Go implementation of JSON Web Tokens. Prior to\n> 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a\n> call to strings.Split) its argument (which is untrusted data) on\n> periods. As a result, in the face of a malicious request whose\n> Authorization header consists of Bearer followed by many period\n> characters, a call to that function incurs allocations to the tune\n> of O(n) bytes (where n stands for the length of the function's\n> argument), with a constant factor of about 16. This issue is fixed\n> in 5.2.2 and 4.5.2.",
    "id": "FBSD-2025-0057",
    "modified": "2025-03-31T00:00:00Z",
    "published": "2025-03-31T00:00:00Z",
    "references": [
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-22870"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-22870"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-29923"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-29923"
        },
        {
            "type": "ADVISORY",
            "url": "https://api.osv.dev/v1/vulns/CVE-2025-30204"
        },
        {
            "type": "ADVISORY",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-30204"
        }
    ],
    "schema_version": "1.7.0",
    "summary": "gitea -- Multiple vulnerabilities"
}
